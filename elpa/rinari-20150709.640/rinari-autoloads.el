;;; rinari-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from rinari.el

(autoload 'rinari-rake "rinari" "\
Select and run a rake TASK using `ruby-compilation-rake'.

(fn &optional TASK EDIT-CMD-ARGS)" t)
(autoload 'rinari-cap "rinari" "\
Select and run a capistrano TASK using `ruby-compilation-cap'.

(fn &optional TASK EDIT-CMD-ARGS)" t)
(autoload 'rinari-launch "rinari" "\
Call function `rinari-minor-mode' if inside a rails project.
Otherwise, disable that minor mode if currently enabled." t)
(autoload 'rinari-minor-mode "rinari" "\
Enable Rinari minor mode to support working with the Ruby on Rails framework.

This is a minor mode.  If called interactively, toggle the `Rinari minor
mode' mode.  If the prefix argument is positive, enable the mode, and if
it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate the variable `rinari-minor-mode'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(put 'global-rinari-mode 'globalized-minor-mode t)
(defvar global-rinari-mode nil "\
Non-nil if Global Rinari mode is enabled.
See the `global-rinari-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-rinari-mode'.")
(custom-autoload 'global-rinari-mode "rinari" nil)
(autoload 'global-rinari-mode "rinari" "\
Toggle Rinari minor mode in all buffers.
With prefix ARG, enable Global Rinari mode if ARG is positive;
otherwise, disable it.

If called from Lisp, toggle the mode if ARG is `toggle'.
Enable the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

Rinari minor mode is enabled in all buffers where
`rinari-launch-maybe' would do it.

See `rinari-minor-mode' for more information on Rinari minor mode.

(fn &optional ARG)" t)
(register-definition-prefixes "rinari" '("rinari-"))

;;; End of scraped data

(provide 'rinari-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; rinari-autoloads.el ends here
