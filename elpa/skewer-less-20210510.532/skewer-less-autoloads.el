;;; skewer-less-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from skewer-less.el

(autoload 'skewer-less-mode "skewer-less" "\
Minor mode allowing LESS stylesheet manipulation via `skewer-mode'.

For this to work properly, the lessc command must be available on
`exec-path', and `skewer' must be running.

This is a minor mode.  If called interactively, toggle the `skewer-less
mode' mode.  If the prefix argument is positive, enable the mode, and if
it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate the variable `skewer-less-mode'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(autoload 'skewer-less-eval-buffer "skewer-less" "\
When skewer appears to be active, ask for a reload." t)
(autoload 'skewer-less-eval-region "skewer-less" "\
Process the region from BEG to END with \"lessc\", and pass it to `skewer-css'.

(fn BEG END)" t)
(register-definition-prefixes "skewer-less" '("skewer-less-mode-map"))

;;; End of scraped data

(provide 'skewer-less-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; skewer-less-autoloads.el ends here
